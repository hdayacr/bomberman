#include "Shape.hpp"

void Triangle::initialize(void)
{
}

void Triangle::update(gdl::GameClock const & gameClock, gdl::Input & input)
{
  (void)gameClock;
  (void)input;
}

void Triangle::draw(void)
{
  glBegin(GL_TRIANGLES);
  glColor3f(1.0f, 0.50f, 0.75f);
  glVertex3f(0.0f, 150.0f, 0.0f);
  glVertex3f(-150.0f, 0.0f, 0.0f);
  glVertex3f(150.0f, 00.0f, 0.0f);
  glEnd();
}

void Rectangle::initialize(void)
{
}

void Rectangle::update(gdl::GameClock const & gameClock, gdl::Input & input)
{
  (void)gameClock;
  (void)input;
}

void Rectangle::draw(void)
{
  glPushMatrix();
  glLoadIdentity();
  glTranslatef(-800, 600, 0);

  glBegin(GL_QUADS);
  glColor3f(1.0f, 0.50f, 0.75f);

  glVertex3f(-150.0f, 100.0f, 0.0f);
  glVertex3f(-150.0f, -100.0f, 0.0f);
  glVertex3f(150.0f, -100.0f, 0.0f);
  glVertex3f(150.0f, 100.0f, 0.0f);
  glEnd();
  glPopMatrix();
}

void	Rectangle::raff(float x, float y, float z, float, float, float, gdl::Image texture_)
{
  glPushMatrix();
  glTranslatef(x,y,z);

  x = 25.0;
  y = 25.0;
  z = 25.0;

  texture_.bind();
 
  //  glColor3ub((color / 256 / 256), (color / 256), color);

  glBegin(GL_QUADS);


  glTexCoord2f(0.0f, 0.0f);
  glVertex3d(x,y,z);
  glTexCoord2f(0.0f, 1.0f);
  glVertex3d(x,y,z*-1);
  glTexCoord2f(1.0f, 1.0f);
  glVertex3d(x*-1,y,z*-1);
  glTexCoord2f(1.0f, 0.0f);
  glVertex3d(x*-1,y,z);


  glTexCoord2f(0.0f, 0.0f);
  glVertex3d(x,y*-1,z);
  glTexCoord2f(0.0f, 1.0f);
  glVertex3d(x,y*-1,z*-1);
  glTexCoord2f(1.0f, 1.0f);
  glVertex3d(x,y,z*-1);
  glTexCoord2f(1.0f, 0.0f);
  glVertex3d(x,y,z);

  glTexCoord2f(0.0f, 0.0f);
  glVertex3d(x*-1,y*-1,z);
  glTexCoord2f(0.0f, 1.0f);
  glVertex3d(x*-1,y*-1,z*-1);
  glTexCoord2f(1.0f, 1.0f);
  glVertex3d(x,y*-1,z*-1);
  glTexCoord2f(1.0f, 0.0f);
  glVertex3d(x,y*-1,z);


  glTexCoord2f(0.0f, 0.0f);
  glVertex3d(x*-1,y,z);
  glTexCoord2f(0.0f, 1.0f);
  glVertex3d(x*-1,y,z*-1);
  glTexCoord2f(1.0f, 1.0f);
  glVertex3d(x*-1,y*-1,z*-1);
  glTexCoord2f(1.0f, 0.0f);
  glVertex3d(x*-1,y*-1,z);


  glTexCoord2f(0.0f, 0.0f);
  glVertex3d(x,y,z*-1);
  glTexCoord2f(0.0f, 1.0f);
  glVertex3d(x,y*-1,z*-1);
  glTexCoord2f(1.0f, 1.0f);
  glVertex3d(x*-1,y*-1,z*-1);
  glTexCoord2f(1.0f, 0.0f);
  glVertex3d(x*-1,y,z*-1);

  glTexCoord2f(0.0f, 0.0f);
  glVertex3d(x,y*-1,z);
  glTexCoord2f(0.0f, 1.0f);
  glVertex3d(x,y,z);
  glTexCoord2f(1.0f, 1.0f);
  glVertex3d(x*-1,y,z);
  glTexCoord2f(1.0f, 0.0f);
  glVertex3d(x*-1,y*-1,z);

  glEnd();
  glPopMatrix();
}

void Rectangle::wallpaper(gdl::Image image_)
{
  image_.bind();
  glBegin(GL_QUADS);
  glTexCoord2d(0, 0); glVertex2f(-(LARGEUR + 150), HAUTEUR - 100);
  glTexCoord2d(0, 1); glVertex2f(-(LARGEUR + 150), -(HAUTEUR - 100));
  glTexCoord2d(1, 1); glVertex2f(LARGEUR + 150, -(HAUTEUR - 100));
  glTexCoord2d(1, 0); glVertex2f(LARGEUR + 150, HAUTEUR - 100);
  glEnd();
}

void Rectangle::floor(float x, float y, float z, gdl::Image image_)
{
  glPushMatrix();
  image_.bind();

  glBegin(GL_QUADS);
  glTexCoord2f(0.0f, 0.0f);
  glVertex3d(x, y, z);
  glTexCoord2f(0.0f, 1.0f);
  glVertex3d(x, y-100.0f, z);
  glTexCoord2f(1.0f, 1.0f);
  glVertex3d(x + 100.0f, y-100.0f, z);
  glTexCoord2f(1.0f, 0.0f);
  glVertex3d(x+100.0f, y, z);
  glEnd();
  glPopMatrix();
}
